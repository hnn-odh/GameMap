"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}require("../css/style.css");var THREE=_interopRequireWildcard(require("three")),_OrbitControls=require("three/examples/jsm/controls/OrbitControls.js"),dat=_interopRequireWildcard(require("dat.gui")),_EffectComposer=require("three/examples/jsm/postprocessing/EffectComposer.js"),_RenderPass=require("three/examples/jsm/postprocessing/RenderPass.js"),_UnrealBloomPass=require("three/examples/jsm/postprocessing/UnrealBloomPass.js"),_GLTFLoader=require("three/examples/jsm/loaders/GLTFLoader"),_DRACOLoader=require("three/examples/jsm/loaders/DRACOLoader");function _getRequireWildcardCache(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return _getRequireWildcardCache=function(){return e},e}function _interopRequireWildcard(e){if(e&&e.__esModule)return e;if(null===e||"object"!==_typeof(e)&&"function"!=typeof e)return{default:e};var r=_getRequireWildcardCache();if(r&&r.has(e))return r.get(e);var t={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var i=o?Object.getOwnPropertyDescriptor(e,a):null;i&&(i.get||i.set)?Object.defineProperty(t,a,i):t[a]=e[a]}return t.default=e,r&&r.set(e,t),t}var raycaster=new THREE.Raycaster,mouse=new THREE.Vector2,loader=new THREE.TextureLoader,height=loader.load("./assets/Displacement_small.jpg"),texture=loader.load("./assets/Combine.png"),alpha=loader.load("./assets/alpha2.jpg"),gui=new dat.GUI,canvas=document.querySelector("canvas.webgl"),scene=new THREE.Scene,planeGeometry=new THREE.PlaneGeometry(10,10,64,64),planeMaterial=new THREE.MeshStandardMaterial({color:"white",map:texture,displacementMap:height,displacementScale:2,alphaMap:alpha,transparent:!0,depthTest:!1}),plane=new THREE.Mesh(planeGeometry,planeMaterial);plane.rotation.x=4.71239,plane.rotation.z=4.71239,plane.position.y=-.5,plane.receiveShadow=!0;var pointLight=new THREE.PointLight(16777215,8);pointLight.position.x=0,pointLight.position.y=2,pointLight.position.z=1,pointLight.castShadow=!0,scene.add(pointLight);var sizes={width:window.innerWidth,height:window.innerHeight};window.addEventListener("resize",function(){sizes.width=window.innerWidth,sizes.height=window.innerHeight,camera.aspect=sizes.width/sizes.height,camera.updateProjectionMatrix(),renderer.setSize(sizes.width,sizes.height),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2))});var camera=new THREE.PerspectiveCamera(75,sizes.width/sizes.height,.1,100);camera.position.x=2,camera.position.y=1.2,camera.position.z=2,scene.add(camera);var controls=new _OrbitControls.OrbitControls(camera,canvas);controls.enableDamping=!0,controls.enablePan=!1,controls.maxPolarAngle=Math.PI/2,controls.maxDistance=2;var renderer=new THREE.WebGLRenderer({canvas:canvas});renderer.setSize(sizes.width,sizes.height),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2));var model,gloader=new _GLTFLoader.GLTFLoader,dLoader=new _DRACOLoader.DRACOLoader;dLoader.setDecoderPath("https://www.gstatic.com/draco/versioned/decoders/1.5.6/"),dLoader.setDecoderConfig({type:"js"}),gloader.setDRACOLoader(dLoader),gloader.load("./assets/map.glb",function(e){(model=e.scene).scale.set(.009,.009,.009),model.position.y=-1,scene.add(model),document.dispatchEvent(new CustomEvent("modelLoaded"))}),document.addEventListener("modelLoaded",function(){});var clock=new THREE.Clock,tick=function e(){clock.getElapsedTime();renderer.render(scene,camera),window.requestAnimationFrame(e)};tick();var gridHelper=new THREE.GridHelper(12,12),axesHelper=new THREE.AxesHelper(4);gui.add(plane.rotation,"x").min(0).max(7),gui.add(camera.position,"x"),gui.add(camera.position,"y"),gui.add(camera.position,"z"),gui.add(pointLight.position,"x"),gui.add(pointLight.position,"y"),gui.add(pointLight.position,"z"),gui.addColor(pointLight,"color"),scene.background=new THREE.Color(1569);var sphereGeometry=new THREE.SphereGeometry(3,32,32),edges=new THREE.EdgesGeometry(sphereGeometry),sphereMaterial=new THREE.LineBasicMaterial({color:2175616}),lineSegments=new THREE.LineSegments(edges,sphereMaterial);scene.add(lineSegments);var sphere=new THREE.Mesh(sphereGeometry,sphereMaterial);scene.fog=new THREE.FogExp2(255,.2);
//# sourceMappingURL=scripts.min.js.map
